script(src="libs/chart.js/chart.min.js") 
script.
				let charData = [
					{caption:'Направления и численность Центра прикладной разработки',order:'true',title:'true', delay:200},
					{ number:'35+', name: 'Прикладная разработка', caption:'Заказная разработка решений для планирования, прогнозирования, моделирования и&nbsp;оптимизации производственной и&nbsp;операционной деятельности предприятия. Системы сбора и&nbsp;консолидации инцормации, корпоративные порталы и&nbsp;интеграционные решения', percent: 22, color: '#5b3b22', order:'true',position:'up-right', progress:44, delay:400},
					{ number:'10+', name: 'Мобильная разработка', caption:'Корпоративные мобильные приложения для управления операционной деятельностью предприятия (управление ремонтами, закупками, проектами, продажами, торговыми залами, складами и&nbsp;распределительными процессами). Мобильная аналитика, управлени мобильными доступами и&nbsp;устройствами', percent: 6, color: '#312116',position:'down-right', progress:24, delay:600},
					{ number:'115+', name: 'Заказная разработка&nbsp;SAP', caption:' Расширение стандартной функциональности, интерграционные решения, пользовательские и&nbsp;портальные интерфейсы, а&nbsp;также мобильные приложения для всей продуктовой линейки SAP систем', percent: 72, color: '#d68843',order:'true', orderMob:'true', position:'down-left', progress: 100, delay:800},
					//- { name: 'Департамент ERP', percent: 6, color: '#312116' },
					//- { name: 'Департамент BI', percent: 72, color: '#d68843' },
				];

				let charNames = [], charPercent = [], charColors = [], charColorsGray = [], charDelay = [], myChart;

				let charContent = document.querySelector(".sCenterCount__wrap");
				for (var i = 0; i < charData.length; i++) {
					let name = charData[ i ][ 'name' ];
					let color = charData[ i ][ 'color' ];
					let delay = charData[ i ][ 'delay' ];
					charNames.push(name)
					charPercent.push(charData[i]['percent'])
					charColors.push(color);
					charDelay.push(delay);
					charColorsGray.push('rgba(255,255,255, .1)');
				}
				const data ={
					labels: charNames,
					datasets: [{
							// label: '# of Votes',
							data:charPercent,
							backgroundColor: charColors,
							hoverOffset: 20,
						}]
					};
					
					
					const config = {
						type: 'doughnut',
						data: data,
						options: {
							spacing: 40,
								borderWidth: 0,  
								hoverBackgroundColor:  '#D68843',
								cutout: '94%',
								layout: {
									padding: 20
							},
							plugins: {
								tooltip: {
									// Disable the on-canvas tooltip
									enabled: false,  
							},
								legend: {
									display: false,
									position: 'right'
								}, 
							}, 
							onHover: function(event,elements) {
								$("#myChart").css("cursor", elements[ 0 ] ? "pointer" : "default"); 
								
								if (elements[ 0 ]) { 
									let index = elements[ 0 ].index;
									//- let bar = document.querySelector(".sTeam__bar"); 
									//- if (bar) {
									//- 	bar.style.setProperty('--el-index', index);
									//- }
									//- console.log(`sCenterCount__item:nth-child(${index + 2}) sCenterCount__item-inner`);
									$(`.sCenterCount__item-inner`).removeClass("hover")
									$(`.sCenterCount__item:nth-child(${index + 2}) .sCenterCount__item-inner`).addClass("hover")
									myChart.data.datasets[ 0 ].backgroundColor = charColorsGray; 
								}
								else { 
									myChart.data.datasets[ 0 ].backgroundColor =    charColors; 
								}
								myChart.update();
							},
							//- onHover: function(event,elements) {
							//- 	$("#myChart").css("cursor", elements[ 0 ] ? "pointer" : "default"); 
								
							//- 	if (elements[ 0 ]) { 
							//- 		let index = elements[ 0 ].index;
							//- 		let bar = document.querySelector(".sTeam__bar"); 
							//- 		if (bar) {
							//- 			bar.style.setProperty('--el-index', index);
							//- 		}
							//- 		console.log(`sCenterCount__item:nth-child(${index + 2}) sCenterCount__item-inner`);
							//- 		$(`.sCenterCount__item-inner`).removeClass("hover")
							//- 		$(`.sCenterCount__item:nth-child(${index + 2}) .sCenterCount__item-inner`).addClass("hover")
							//- 		myChart.data.datasets[ 0 ].backgroundColor = charColorsGray; 
							//- 	}
							//- 	else { 
							//- 		myChart.data.datasets[ 0 ].backgroundColor =    charColors; 
							//- 	}
							//- 	myChart.update();
							//- },

						},
					// tooltip
				};

	
					const ctx = document.getElementById('myChart').getContext('2d');

					myChart = new Chart(ctx, config);
					for (var i = 0; i < charData.length; i++) {
						let el = i;
						let name = charData[ i ][ 'name' ];
						let number = charData[ i ][ 'number' ];
						let caption = charData[ i ][ 'caption' ];
						let color = charData[ i ][ 'color' ];
						let order = charData[ i ][ 'order' ];
						let orderMob = charData[ i ][ 'orderMob' ];
						let position = charData[ i ][ 'position' ];
						let title = charData[ i ][ 'title' ];
						let progress = charData[ i ][ 'progress' ];
						let delay = charData[ i ][ 'delay' ];
						let charContentItem = document.createElement("div");
						charContentItem.classList.add('sCenterCount__item');
						charContentItem.setAttribute('data-aos','fade-zoom-in');
						charContentItem.setAttribute('data-aos-delay', delay);
						if (order){
							charContentItem.classList.add('sCenterCount__item--order');
						}
						if (orderMob){
							charContentItem.classList.add('sCenterCount__item--order-mob');
						}
						if (position){
							charContentItem.classList.add(`sCenterCount__item--${position}`);
						}
						if (title){
							charContentItem.classList.add(`title-block`);
							charContentItem.style.setProperty('--bg', color);
							charContentItem.setAttribute('data-chart', i);
							charContentItem.innerHTML = `<h2>${caption}</h2>`;
						} else{
							charContentItem.style.setProperty('--bg', color);
							charContentItem.setAttribute('data-chart', i);
							charContentItem.innerHTML = `<div class="sCenterCount__item-inner">
								<div class="sCenterCount__row row">
									<div class="col-lg-auto col">
										<div class="sCenterCount__item-number">${number}</div>
									</div>
									<div class="col-auto">
										<div class="sCenterCount__item-title">${name}</div>
									</div>
								</div>
								<div class="sCenterCount__progress-bar" style="--width:${progress}%"></div>
								<div class="sCenterCount__item-caption">
									${caption}
								</div>
							</div>`;
						}
						charContent.appendChild(charContentItem);
						
						//- let bar = document.querySelector(".sCenterCount__bar"); 
						//- if (bar) {
						//- 	bar.style.setProperty('--el-count', charData.length);
						//- }
						
						charContentItem.addEventListener("mouseover", function () {  
							myChart.setActiveElements([
								{datasetIndex: 0, index: el},
							]); 

							// charColorsGray[ el ] = '#D68843';
							myChart.data.datasets[0].backgroundColor= charColorsGray;
							myChart.update();
						})
						
						charContentItem.addEventListener("mouseleave", function () { 
							// charColorsGray[ el ] = charColors[el];
							myChart.data.datasets[ 0 ].backgroundColor = charColors; 
							// console.log(	myChart.data.datasets[ 0 ].backgroundColor);
							myChart.setActiveElements([
								{datasetIndex: 1 },
							]);
							myChart.update();
						})

					} 

//- script(src="libs/chart.js/chart.min.js") 
//- script.
//- 				let charData = [
//- 					{ number:`35+` name: 'Прикладная разработка', caption:` Заказная разработка решений для планирования, прогнозирования, моделирования и&nbsp;оптимизации производственной и&nbsp;операционной деятельности предприятия. Системы сбора и&nbsp;консолидации инцормации, корпоративные порталы и&nbsp;интеграционные решения.` percent: 22, color: '#5b3b22'},
//- 					{ name: 'Департамент ERP', percent: 6, color: '#312116' },
//- 					{ name: 'Департамент BI', percent: 72, color: '#d68843' },
//- 				];

//- 				let charNames = [], charPercent = [], charColors = [], charColorsGray = [], myChart;

//- 				let charContent = document.querySelector(".sCenterCount__canvas-wrap");
//- 				for (var i = 0; i < charData.length; i++) {
//- 					let name = charData[ i ][ 'name' ];
//- 					let color = charData[ i ][ 'color' ];
					
//- 					charNames.push(name)
//- 					charPercent.push(charData[i]['percent'])
//- 					charColors.push(color);
//- 					charColorsGray.push('rgba(255,255,255, .1)');
//- 				}
//- 				const data ={
//- 					labels: charNames,
//- 					datasets: [{
//- 							// label: '# of Votes',
//- 							data:charPercent,
//- 							backgroundColor: charColors,
//- 							hoverOffset: 20,
//- 						}]
//- 					};
					
					
//- 					const config = {
//- 						type: 'doughnut',
//- 						data: data,
//- 						options: {
//- 							spacing: 40,
//- 								borderWidth: 0,  
//- 								hoverBackgroundColor:  '#D68843',
//- 								cutout: '94%',
//- 								layout: {
//- 									padding: 20
//- 							},
//- 							plugins: {
//- 								tooltip: {
//- 									// Disable the on-canvas tooltip
//- 									enabled: false,  
//- 							},
//- 								legend: {
//- 									display: false,
//- 									position: 'right'
//- 								}, 
//- 							}, 
//- 							onHover: function(event,elements) {
//- 								$("#myChart").css("cursor", elements[ 0 ] ? "pointer" : "default"); 
								
//- 								if (elements[ 0 ]) { 
//- 									let index = elements[ 0 ].index;
//- 									let bar = document.querySelector(".sTeam__bar"); 
//- 									if (bar) {
//- 										bar.style.setProperty('--el-index', index);
//- 									}
//- 									console.log(`.sTeam__list-item:nth-child(${index + 2}) .sTeam__list-item-inner`);
//- 									$(`.sTeam__list-item-inner`).removeClass("hover")
//- 									$(`.sTeam__list-item:nth-child(${index + 2}) .sTeam__list-item-inner`).addClass("hover")
//- 									myChart.data.datasets[ 0 ].backgroundColor = charColorsGray; 
//- 								}
//- 								else { 
//- 									myChart.data.datasets[ 0 ].backgroundColor =    charColors; 
//- 								}
//- 								myChart.update();
//- 							},

//- 						},
//- 					// tooltip
//- 				};

	
//- 					const ctx = document.getElementById('myChart').getContext('2d');

//- 					myChart = new Chart(ctx, config);
//- 					for (var i = 0; i < charData.length; i++) {
//- 						let el = i;
//- 						let name = charData[ i ][ 'name' ];
//- 						let color = charData[ i ][ 'color' ];
//- 						let charContentItem = document.createElement("div");
//- 						//- charContentItem.classList.add('sTeam__list-item');
//- 						charContentItem.style.setProperty('--bg', color);
//- 						charContentItem.setAttribute('data-chart', i);
//- 						//- charContentItem.innerHTML = `<div class="sTeam__list-item-inner">${name}</div>`;
//- 						//- charContent.appendChild(charContentItem);
						
//- 						let bar = document.querySelector(".sTeam__bar"); 
//- 						if (bar) {
//- 							bar.style.setProperty('--el-count', charData.length);
//- 						}
						
//- 						charContentItem.addEventListener("mouseover", function () {  
//- 							myChart.setActiveElements([
//- 								{datasetIndex: 0, index: el},
//- 							]); 

//- 							// charColorsGray[ el ] = '#D68843';
//- 							myChart.data.datasets[0].backgroundColor= charColorsGray;
//- 							myChart.update();
//- 						})
						
//- 						charContentItem.addEventListener("mouseleave", function () { 
//- 							// charColorsGray[ el ] = charColors[el];
//- 							myChart.data.datasets[ 0 ].backgroundColor = charColors; 
//- 							// console.log(	myChart.data.datasets[ 0 ].backgroundColor);
//- 							myChart.setActiveElements([
//- 								{datasetIndex: 1 },
//- 							]);
//- 							myChart.update();
//- 						})

//- 					} 